name: Schedule

on:
 schedule:
 - cron: 0 4 * * *
 push:
  paths:
  - '.github/workflows/Schedule.yml'
  - 'Source/.clang-format'

defaults:
 run:
  shell: bash

jobs:

 Maintenance:
  runs-on: ubuntu-latest
  steps:

  - name: Configure
    run:  |
          :
          event="${{ github.event_name }}"
          if [ "$event" == "repository_dispatch" ]; then
             event="${event}:${{ github.event.action }}"
          fi
          echo ::set-env name=GHA_EVENT::$event

  - name: Clone
    uses: actions/checkout@v2
    with:
     token: ${{ secrets.ANTALASKAYA_TOKEN }}

  - name: Install
    run:  |
          :
          echo ::group::APT update
          sudo apt update
          echo ::endgroup::

          if [ -f Source/.clang-format ]; then
             clang_format=$(grep "#!" Source/.clang-format | awk '{print $2}')
             if [ -n "${clang_format}" ]; then
                echo ::set-env name=GHA_CLANG_FORMAT::${clang_format}

                echo ::group::Install ${clang_format}
                sudo apt install ${clang_format} 2>&1
                echo ::endgroup::
             fi
          fi

  - name: Source formatting
    if:   env.GHA_CLANG_FORMAT != ''
    run:  |
          :
          if [ -f Source/.clang-format ]; then
             for code in $(find Source/ -type f -name '*.[CcHh][Pp][Pp]' | sort); do
                 ${GHA_CLANG_FORMAT} -style=file -i $code
             done
             git diff --quiet || (git add --update && echo "- Source formatting" >> $HOME/gha.commit)
          fi

  - name: Validation
    run:  |
          :
          echo ::group::git status
          git status 2>&1
          echo ::endgroup::

          if [ -f "$HOME/gha.commit" ]; then
             sed -i '1s!^!Progress every day\n!' $HOME/gha.commit
             echo ::set-env name=GHA_COMMIT::true
             cat $HOME/gha.commit
          fi

  - name: Push
    if:   env.GHA_COMMIT == 'true'
    run:  |
          :
          echo ::group::git commit
          sed -i '/^#/d' $HOME/gha.commit
          git config --global user.name  "${{ secrets.ANTALASKAYA_NAME }}"
          git config --global user.email "${{ secrets.ANTALASKAYA_EMAIL }}"
          git commit --file="$HOME/gha.commit" 2>&1
          rm -f $HOME/gha.commit
          echo ::endgroup::

          echo ::group::git log
          git log -p -n 1 2>&1
          echo ::endgroup::

          if [ "$GHA_EVENT" == "schedule" ]; then
             echo ::group::git push
             git push 2>&1
             echo ::endgroup::
          else
             echo "[WARNING] Repository not updated : event<$GHA_EVENT> not allowed to modify repository"
          fi
    continue-on-error: true
